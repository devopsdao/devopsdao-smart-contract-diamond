import * as Witnet from "witnet-requests"

const github = new Witnet.Source("https://api.github.com/repos/devopsdao/devopsdao-smart-contract-diamond/pulls?state=all")
  .parseJSONArray()
  .filter(
    new Witnet.Script([Witnet.TYPES.MAP])
      // from all elements in the array,
      // select the ones which "title" field
      // match wildcard #1
      .getString("title")
      .match({ "\\1\\": true }, false)
  )
  .filter(
    // from all elements in the array,
    // select the ones which "merged_at" field
    // string length is greater than zero
    new Witnet.Script([Witnet.TYPES.MAP]).getString("merged_at").length().greaterThan(0)
  )
  .getMap(0)
  .getString("state");



const aggregator = new Witnet.Aggregator({
  filters: [
   [Witnet.Types.FILTERS.deviationStandard, 1.5]
  ],
  reducer: Witnet.Types.REDUCERS.averageMean
})

const tally = new Witnet.Tally({
  filters: [
   [Witnet.Types.FILTERS.deviationStandard, 1.5]
  ],
  reducer: Witnet.Types.REDUCERS.averageMean
})

const request = new Witnet.Request()
  .addSource(github)
  .setAggregator(aggregator)
  .setTally(tally)
  .setQuorum(25)
  .setFees(1000000, 1000000)
  .setCollateral(10000000000)

export { request as default }